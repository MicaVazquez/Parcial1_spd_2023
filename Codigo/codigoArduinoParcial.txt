// C++ code
//
#define PULSADOR_BAJAR 13
#define PULSADOR_PAUSAR 12
#define PULSADOR_SUBIR 11
#define LED_VERDE 2
#define LED_ROJO 3
#define TRUE  1
#define FALSE 0

int estadoBotonSubir;
int estadoAnteriorBotonSubir = 0; //btn_subir

int estadoBotonBajar;
int estadoAnteriorBotonBajar = 0;//btn_bajar

int estadoBotonPausar = 0;
int estadoAnteriorBotonPausar = 0;//btn_pausar
int estadoDelLed = 0;


int elementos[] = {2,3,4,5,6,7,8,9,10};
int pulsadores[] = {11,12,13};
int nivel = 0;
int flagPausa = FALSE;

void setup()
{
  for(int i= 0;i<9;i++)
  {
    pinMode(elementos[i], OUTPUT);  //lista de los pines de los leds y los segmentos
  }
  
  for(int i= 0;i<4;i++)
  {
    pinMode(pulsadores[i],INPUT);  //lista de los pulsadores
  }
  Serial.begin(9600);
  visualizacion(0); 
}

void loop()
{
  //BOTON SUBIR
  estadoBotonSubir = digitalRead(PULSADOR_SUBIR);//leo el estado del boton
  
  if (estadoBotonSubir!=estadoAnteriorBotonSubir)//comparar el estado actual con el estado anterior-> cambio en el estado del botÃ³n
  {
  	if (estadoBotonSubir == HIGH && flagPausa == FALSE)
  	{
      subirMontacargas();
 	}
    estadoAnteriorBotonSubir = estadoBotonSubir;
  }
  
  //BOTON BAJAR
  estadoBotonBajar = digitalRead(PULSADOR_BAJAR);//leo el estado del boton
  
  if (estadoBotonBajar!=estadoAnteriorBotonBajar)
  {
  
  	if (estadoBotonBajar == HIGH && flagPausa == FALSE)//solo si esta presionado y la bandera esta en false
  	{
      bajarMontacargas();
 	}
    
    estadoAnteriorBotonBajar= estadoBotonBajar;
  } 
  
  
  //BOTON PAUSAR
  estadoBotonPausar = digitalRead(PULSADOR_PAUSAR);
    
  	if ((estadoBotonPausar == HIGH) &&(estadoAnteriorBotonPausar == LOW))
  	{                                   // indica en que estado debe estar el led
        estadoDelLed = 1 - estadoDelLed;//la primera vez va a dar 1 y en la siguiente 0 
        delay(10); 
      
        pausarMontacargas(estadoDelLed);
        
 	}
    
    estadoAnteriorBotonPausar= estadoBotonPausar;
} 

void display(int a,int b,int c,int d,int e,int f,int g)//recibe el estado de cada segmento
{
  digitalWrite(9,a);//pin y estado del pin
  digitalWrite(10,b);
  digitalWrite(4,c);
  digitalWrite(5,d);
  digitalWrite(6,e);
  digitalWrite(8,f);
  digitalWrite(7,g);
}
void visualizacion(int num)
{
  switch(num)
  {
    case 0: display(1,1,1,1,1,1,0);
    	break;
    case 1: display(0,1,1,0,0,0,0);
        break;
    case 2:display(1,1,0,1,1,0,1);
    	break;
    case 3:display(1,1,1,1,0,0,1);
    	break;
    case 4:display(0,1,1,0,0,1,1);
    	break;
    case 5:display(1,0,1,1,0,1,1);
    	break;
    case 6:display(1,0,1,1,1,1,1);
    	break;
    case 7:display(1,1,1,0,0,0,0);
    	break;
     case 8:display(1,1,1,1,1,1,1);
    	break;
     case 9:display(1,1,1,1,0,1,1);
    	break;
  }
}

void subirMontacargas()
{
   nivel++;
             
        if (nivel > 9)//cuando nivel supere nueve
        {
          nivel = 9;
          visualizacion(nivel);
          Serial.println("Solo se puede subir hasta 9");
        }
        else
        {
           visualizacion(nivel);//dibuja el num
           digitalWrite(LED_VERDE, HIGH); //encender led
           Serial.print("Montacargas en el piso:");
           Serial.println(nivel);
           delay(3000);//3seg
           display(0,0,0,0,0,0,0);//apago segmentos
           digitalWrite(LED_VERDE, LOW);//apago led
        }
}

void bajarMontacargas()
{
   nivel--;
        if (nivel < 0)//cuando el valor del nivel sea menor que cero
        {
          nivel = 0;
          visualizacion(nivel);
          Serial.println("Solo se puede bajar hasta 0");
        }
        else
        {
           visualizacion(nivel);
           digitalWrite(LED_VERDE, HIGH); 
           Serial.print("Montacargas en el piso:");
           Serial.println(nivel); 
           delay(3000);//3seg
           display(0,0,0,0,0,0,0);//apago segmentos
           digitalWrite(LED_VERDE, LOW);//apago led
        }
}

void pausarMontacargas(int estadoDelLed)
{
      if(estadoDelLed == 1)
        {
          digitalWrite(LED_ROJO,HIGH);
          Serial.println("Montacargas en pausa...");
          Serial.print("Pausado en el piso: ");
          Serial.println(nivel);
          flagPausa = TRUE;//bandera cambia si esta en pausa
        }
        else // si el valor es 0
        {
          digitalWrite(LED_ROJO,LOW);
          Serial.println("Montacargas activo! :D");
          flagPausa = FALSE;
        }
}